-- Rollen (vergleichbar zu Joomla ACL-Gruppen)
create table if not exists roles (
  id bigint generated by default as identity primary key,
  name text not null unique,
  label text not null,
  description text,
  rank integer not null default 0,
  is_superadmin boolean not null default false,
  created_at timestamptz not null default now(),
  updated_at timestamptz not null default now()
);

-- Benutzer ↔ Rollen (mehrere Rollen pro Nutzer möglich)
create table if not exists user_roles (
  user_id text not null,
  role_id bigint not null references roles(id) on delete cascade,
  assigned_at timestamptz not null default now(),
  primary key (user_id, role_id)
);

-- Fein-granulare Berechtigungen pro Tool/Route
create table if not exists role_permissions (
  role_id bigint not null references roles(id) on delete cascade,
  route text not null,
  level smallint not null default 0,
  updated_at timestamptz not null default now(),
  primary key (role_id, route)
);

-- Basisrollen anlegen/aktualisieren
insert into roles (name, label, rank, is_superadmin)
values
  ('member', 'Mitglied', 0, false),
  ('admin', 'Admin', 50, false),
  ('superadmin', 'Superadmin', 100, true)
on conflict (name) do update
set label = excluded.label,
    rank = excluded.rank,
    is_superadmin = excluded.is_superadmin,
    updated_at = now();

-- Standardberechtigungen befüllen (0=kein Zugriff, 1=Lesen, 2=Schreiben, 3=Admin)
with seed(role_name, route, level) as (
  values
    ('member', 'dashboard', 1),
    ('member', 'tools', 1),
    ('member', 'tools/files', 2),
    ('member', 'tools/journal', 2),
    ('admin', 'dashboard', 1),
    ('admin', 'admin', 1),
    ('admin', 'admin/users', 1),
    ('admin', 'admin/settings', 1),
    ('admin', 'settings', 1),
    ('admin', 'monitoring', 1),
    ('admin', 'tools', 2),
    ('admin', 'tools/files', 3),
    ('admin', 'tools/journal', 3),
    ('admin', 'tools/storage', 2),
    ('admin', 'tools/system', 2),
    ('admin', 'activity', 1),
    ('superadmin', 'dashboard', 3),
    ('superadmin', 'admin', 3),
    ('superadmin', 'admin/users', 3),
    ('superadmin', 'admin/settings', 3),
    ('superadmin', 'settings', 3),
    ('superadmin', 'monitoring', 3),
    ('superadmin', 'tools', 3),
    ('superadmin', 'tools/files', 3),
    ('superadmin', 'tools/journal', 3),
    ('superadmin', 'tools/storage', 3),
    ('superadmin', 'tools/system', 3),
    ('superadmin', 'activity', 3)
)
insert into role_permissions (role_id, route, level)
select r.id, seed.route, seed.level
from seed
join roles r on r.name = seed.role_name
on conflict (role_id, route) do update
set level = excluded.level,
    updated_at = now();
